import numpy as np
import matplotlib.pyplot as plt

def rayon(R, taille):
  r = np.linspace(0, taille, 1000)
  res = -R / taille * r + R
  res = list(res)
  return res

def force(U, cl, cd, rho, f, corde, alpha, taille):
  Vr = 6 * U * np.sin(np.deg2rad(alpha))
  rayonn = rayon(corde, taille)
  Fl = 0
  Fd = 0
  for i in range(len(rayonn)):
    Fl += 0.5 * rho * np.power(Vr, 2) * np.pi * np.power(rayonn[i], 2) / f * cl
    Fd += 0.5 * rho * np.power(Vr, 2) * np.pi * np.power(rayonn[i], 2) / f * cd
    i+=1
  Fl = Fl * np.sin(np.deg2rad(alpha)) 
  Fd = - Fd * np.cos(np.deg2rad(alpha))
  Resultante = np.sqrt(Fl**2 - Fd**2)
  return Resultante

def couple(taille, Vr):
  corde = 0.1 * taille 
  strenght = force(Vr, 0.99, 0.017, 1.225, 16, corde, 6, taille)
  torque = strenght * taille / 2
  return torque

def puissance_nominale(taille, omega, Vr):
  torque = couple(taille, Vr)
  beltz = 0.6
  return torque * omega * beltz

#puissance(100)

vitesse_vent = np.linspace(0, 30, 500) 
#r_omega = np.linspace(0, 150, 100) 

cut_in_speed = 3
cut_speed = 12
cut_out_speed = 20
puissances = []
longueur_pale = 1

for v in vitesse_vent :
    if v < cut_in_speed:
        puissances.append(0)
    elif v >= cut_in_speed and v < cut_speed:
        puissances.append(puissance_nominale(longueur_pale, 100, v))
    elif v >= cut_speed and v < cut_out_speed:
        puissances.append(puissance_nominale(longueur_pale, 100, cut_speed))
    elif v >= cut_out_speed:
        puissances.append(0)
#print(puissances)
plt.plot(vitesse_vent, puissances, label="puissance nominale")
plt.legend()
plt.show()